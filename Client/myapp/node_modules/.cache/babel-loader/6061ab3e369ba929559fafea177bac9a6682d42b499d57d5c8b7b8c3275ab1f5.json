{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erika\\\\Desktop\\\\yehonatan\\\\applications\\\\messaging_UI\\\\myapp\\\\src\\\\NewConversationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { useConversations } from '../contexts/ConversationsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal(_ref) {\n  _s();\n  let {\n    closeModal\n  } = _ref;\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  }\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NewConversationModal, \"vQmONcecoWX1cwhaThpVMl7yKI4=\", false, function () {\n  return [useContacts, useConversations];\n});\n_c = NewConversationModal;\nvar _c;\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useState","Modal","Form","Button","useContacts","useConversations","NewConversationModal","closeModal","selectedContactIds","setSelectedContactIds","contacts","createConversation","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","map","contact","id","name"],"sources":["C:/Users/Erika/Desktop/yehonatan/applications/messaging_UI/myapp/src/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Form, Button } from 'react-bootstrap'\r\nimport { useContacts } from '../contexts/ContactsProvider'\r\nimport { useConversations } from '../contexts/ConversationsProvider'\r\n\r\nexport default function NewConversationModal({ closeModal }) {\r\n  const [selectedContactIds, setSelectedContactIds] = useState([])\r\n  const { contacts } = useContacts()\r\n  const { createConversation } = useConversations()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    createConversation(selectedContactIds)\r\n    closeModal()\r\n  }\r\n\r\n  function handleCheckboxChange(contactId) {\r\n    setSelectedContactIds(prevSelectedContactIds => {\r\n      if (prevSelectedContactIds.includes(contactId)) {\r\n        return prevSelectedContactIds.filter(prevId => {\r\n          return contactId !== prevId\r\n        })\r\n      } else {\r\n        return [...prevSelectedContactIds, contactId]\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>Create Conversation</Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          {contacts.map(contact => (\r\n            <Form.Group controlId={contact.id} key={contact.id}>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                value={selectedContactIds.includes(contact.id)}\r\n                label={contact.name}\r\n                onChange={() => handleCheckboxChange(contact.id)}\r\n              />\r\n            </Form.Group>\r\n          ))}\r\n          <Button type=\"submit\">Create</Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACrD,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,gBAAgB,QAAQ,mCAAmC;AAAA;AAAA;AAEpE,eAAe,SAASC,oBAAoB,OAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC;EACzD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM;IAAEU;EAAS,CAAC,GAAGN,WAAW,EAAE;EAClC,MAAM;IAAEO;EAAmB,CAAC,GAAGN,gBAAgB,EAAE;EAEjD,SAASO,YAAY,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAElBH,kBAAkB,CAACH,kBAAkB,CAAC;IACtCD,UAAU,EAAE;EACd;EAEA,SAASQ,oBAAoB,CAACC,SAAS,EAAE;IACvCP,qBAAqB,CAACQ,sBAAsB,IAAI;MAC9C,IAAIA,sBAAsB,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAE;QAC9C,OAAOC,sBAAsB,CAACE,MAAM,CAACC,MAAM,IAAI;UAC7C,OAAOJ,SAAS,KAAKI,MAAM;QAC7B,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,sBAAsB,EAAED,SAAS,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ;EAEA,oBACE;IAAA,wBACE,QAAC,KAAK,CAAC,MAAM;MAAC,WAAW;MAAA,UAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAe,eAC5D,QAAC,KAAK,CAAC,IAAI;MAAA,uBACT,QAAC,IAAI;QAAC,QAAQ,EAAEJ,YAAa;QAAA,WAC1BF,QAAQ,CAACW,GAAG,CAACC,OAAO,iBACnB,QAAC,IAAI,CAAC,KAAK;UAAC,SAAS,EAAEA,OAAO,CAACC,EAAG;UAAA,uBAChC,QAAC,IAAI,CAAC,KAAK;YACT,IAAI,EAAC,UAAU;YACf,KAAK,EAAEf,kBAAkB,CAACU,QAAQ,CAACI,OAAO,CAACC,EAAE,CAAE;YAC/C,KAAK,EAAED,OAAO,CAACE,IAAK;YACpB,QAAQ,EAAE,MAAMT,oBAAoB,CAACO,OAAO,CAACC,EAAE;UAAE;YAAA;YAAA;YAAA;UAAA;QACjD,GANoCD,OAAO,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAQnD,CAAC,eACF,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACI;EAAA,gBACZ;AAEP;AAAC,GA5CuBjB,oBAAoB;EAAA,QAErBF,WAAW,EACDC,gBAAgB;AAAA;AAAA,KAHzBC,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}